name: Build and Publish Multi-Variant ComfyUI Images (GHCR)

on:
  push:
    branches: [ main ]
    tags: [ 'v*', 'release-*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/comfyui-runner
  CACHE_REF: ghcr.io/${{ github.repository_owner }}/comfyui-runner:buildcache

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pre-build cleanup (free disk space)
        run: |
          echo "Before cleanup:" && df -h /
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          docker system df
          echo "After cleanup:" && df -h /

      - name: Derive version
        id: vars
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            ver=${GITHUB_REF_NAME#v}
          else
            short_sha=$(echo "$GITHUB_SHA" | cut -c1-12)
            ver=sha-${short_sha}
          fi
          echo "version=$ver" >> $GITHUB_OUTPUT
          echo "Using VERSION=$ver" | tee -a $GITHUB_STEP_SUMMARY

      - name: Set up QEMU (multi-arch placeholder)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bake (build all variants sequentially)
        uses: docker/bake-action@v5
        with:
          files: ./docker-bake.hcl
          targets: default
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.args.IMAGE_REPO=${{ env.IMAGE_REPO }}
            *.args.VERSION=${{ steps.vars.outputs.version }}
            *.cache-from=type=registry,ref=${{ env.CACHE_REF }}
            *.cache-to=type=registry,ref=${{ env.CACHE_REF }},mode=max

      - name: Post-build disk report
        if: always()
        run: |
          docker system df
          df -h /

      - name: Summary
        run: |
          echo "Built variants for VERSION=${{ steps.vars.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Image repository: $IMAGE_REPO" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            echo "Images pushed (tags include core, vast, runpod, cpu):" >> $GITHUB_STEP_SUMMARY
          else
            echo "(PR build did not push images)" >> $GITHUB_STEP_SUMMARY
